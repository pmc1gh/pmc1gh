Philip Carr
CS 171 Assignment 5
November 27, 2018
README

Explanation of thought process in building F (the (matrix) operator used in the
implicit fairing implementation):
Since the discrete Laplacian Δ in F = I - hΔ is
(Δx)_i = (1 / (2A)) Σ_j (cot α_j + cot β_j) (x_j - x_i),
Σ_j is the sum over neighbor vertex indices j, this expression is equal to
(Δx)_i = (1 / (2A)) ((Σ_j (cot α_j + cot β_j) x_j)
                       - (Σ_j (cot α_j + cot β_j) x_i)).

Looking at the sum (1 / (2A)) Σ_j (cot α_j + cot β_j) x_j, x_j can be
represented as the column vector that the matrix operator Δ is applied to.
Therefore, the term (1 / (2A)) (cot α_j + cot β_j) is the matrix term that is
multiplied to x_j for each neighbor vertex index j that exists. Given a row i
and column j, for each i,j-th term of the matrix of Δ where i != j, the i,j-th
term is either (1 / (2A)) (cot α_j + cot β_j) if vertices v_i and v_j are
neighbors, or 0 if they are not neighbors.

For the diagonal terms of Δ, the sum -(1 / (2A)) Σ_j (cot α_j + cot β_j) x_i
= -(1 / (2A)) (Σ_j (cot α_j + cot β_j)) x_i is what determines these terms.
Here, x_i can be thought of as the ith component of the column vector x_j, so
traversing across a column of the matrix of Δ, the above sum only corresponds to
the i,i-th term of the matrix of Δ. Therefore, each diagonal term of the matrix
of Δ is -(1 / (2A)) (Σ_j (cot α_j + cot β_j)).

Since F = I - hΔ, each i,j-th term of the matrix of F where i != j is
-(h / (2A)) (cot α_j + cot β_j), and each i,i-th term of the matrix of F is
1 - (-(h / (2A)) (Σ_j (cot α_j + cot β_j)))
= 1 + (h / (2A)) (Σ_j (cot α_j + cot β_j)).

Description of the program:
This directory creates a program that renders and displays a scene using OpenGL,
and allows the user to smooth (using implicit fairing) all the given object(s)
in the scene. The scene can be rotated with an Arcball mouse UI.

Compiling the program:
In this directory, open the terminal and type make to compile the program.
This directory's Makefile creates an executable file named smooth.

Executing the program: The usage statement for the program is stated below.
Also, the executable program generated after running make in this directory can
be run in the terminal and will display a usage statement to show how the
program should be run if specified with no command line arguments.

Interacting with the program:
Click and drag on the scene to rotate the scene using the Arcball mouse UI.

Press the 'h' key to smooth all the object(s) using the current value of the
time step h (initially set using the 4th command line argument), or revert all
the object(s) back to their original forms if the smoothed object is already
being displayed.

Press the 'u' key to increment the current value of h by 0.0001.

Press the 'i' key to decrement the current value of h by 0.0001.

Press the 'o' key to double the current value of h.

Press the 'p' key to halve the current value of h.

Press the 'j' key to set the current value of h to 0.

(Pressing any of the keys 'u', 'i', 'o', 'p', or 'j' will revert all the
object(s) back to their original forms.)

Using make clean will delete the executable file in this directory.

Usage statement ($ represents terminal command line):
$ ./smooth
Usage: ./smooth [scene_description_file.txt] [xres] [yres] [h]
